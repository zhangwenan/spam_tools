<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MailSendFromMapper">
    <resultMap id="MailSendFromMapper" type="me.aipa.spam.bean.MailSendFromDO">
        <id column="id" property="id"/>
        <result column="address" property="address"/>
        <result column="user_name" property="userName"/>
        <result column="pass" property="pass"/>
        <result column="host" property="host"/>
        <result column="success_count" property="successCount"/>
        <result column="fail_count" property="failCount"/>
        <result column="last_time" property="lastTime"/>
        <result column="del" property="del"/>
    </resultMap>

    <select id="getMailSendFromList" resultMap="MailSendFromMapper">
        SELECT id,address,user_name,pass,host,success_count,fail_count,last_time,del FROM mail_send_from WHERE del =0 ORDER BY id DESC LIMIT #{start},#{num}
    </select>
    <!-- 随机取一个发件箱 -->
    <select id="getMailSendFromRand" resultType="me.aipa.spam.bean.MailSendFromDO" >
        SELECT  
	        id,
	        address,
	        user_name userName,
	        pass,
	        host,
	        success_count successCount,
	        fail_count failCount,
	        last_time lastTime,
	        del
	       
        FROM mail_send_from
        WHERE del=0 
        ORDER BY last_time ASC  
        LIMIT 1
    </select>
    <!-- 随机获取 发件箱 list -->
    <select id="getMailSendFromListRand" resultMap="MailSendFromMapper" >
        SELECT  
	        id,
	        address,
	        user_name,
	        pass,
	        host,
	        success_count,
	        fail_count,
	        last_time,
	        del 
        FROM mail_send_from
        WHERE del=0 
        ORDER BY last_time ASC  
        LIMIT #{limit}
    </select>
    <select id="getMailSendFromCount" resultType="int">
        SELECT COUNT(id) From mail_send_from WHERE del=0
    </select>
    <select id="getMailSendFromByAddress" parameterType="String" resultMap="MailSendFromMapper">
        SELECT id,address,user_name,pass,host,success_count,fail_count,last_time,del FROM mail_send_from WHERE del = 0 AND address LIKE #{address} ORDER BY id DESC
    </select>
    <update id="updateMailSendFrom" parameterType="me.aipa.spam.bean.MailSendFromDO">
        UPDATE mail_send_from SET address=#{address},user_name=#{userName},pass=#{pass},host=#{host} WHERE id=#{id} AND del=0
    </update>
    <select id="checkMailSendFromAddressRepeat" resultType="int">
        SELECT COUNT(id) FROM mail_send_from WHERE address = #{address} AND del=0
    </select>
    <insert id="insertMailSendFrom" parameterType="me.aipa.spam.bean.MailSendFromDO">
        INSERT INTO mail_send_from (address,user_name,pass,host,success_count,fail_count) VALUES (#{address},#{userName},#{pass},#{host},0,0)
    </insert>
    <update id="delMailSendFromById" parameterType="String">
           UPDATE mail_send_from SET del=1 WHERE id=#{id}
    </update>
    <!-- 每发送一次邮件 更新last_used ,failCount -->
     <update id="updateLastTimeAndFailCountById" parameterType="me.aipa.spam.bean.MailSendFromDO">
           UPDATE mail_send_from SET last_time=#{lastTime},fail_count=#{failCount} WHERE id=#{id}
    </update>
    
     <!-- 每发送一次邮件 更新last_used ,SuccessCount -->
     <update id="updateLastTimeAndSuccessCountById" parameterType="me.aipa.spam.bean.MailSendFromDO">
           UPDATE mail_send_from SET last_time=#{lastTime},success_count=#{successCount} WHERE id=#{id}
    </update>

</mapper>